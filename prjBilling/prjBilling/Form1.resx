<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="label3.GenerateMember" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>False</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAoHBwkHBgoJCAkLCwoMDxkQDw4ODx4WFxIZJCAmJSMgIyIo
        LTkwKCo2KyIjMkQyNjs9QEBAJjBGS0U+Sjk/QD3/2wBDAQsLCw8NDx0QEB09KSMpPT09PT09PT09PT09
        PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT3/wAARCADxAPYDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDUdm3Hk0m9vU01/vGkzXvHyg/c3qaNzetNpKBj97epo3t6mm0U
        BYfvb1NG5vU00GloCwodvU0u5vU02lpXHYUMfU0u5vU0lGKLjsLub1pdzf3jSCjFK4WF3N/eNG5v7xpM
        UYouFhdzf3jRub1NJijFFwsG5s9aNzepopKdwsLub1NJub1opDRcVhdzetIXb1NFIaLhYXc3qaTefU0h
        NJTFYdvPqaNx9abRQFh29vWjc3qaaaSgCaN2yeTRTIzyaKYhjn5jSZoY/MaSkMUGlzSCigBaWkpRSGAp
        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
        Df7p/mKKKKxlubQ2P//Z
</value>
  </data>
</root>